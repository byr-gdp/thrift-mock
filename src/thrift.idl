// const i32 CUT_TIME = 10;
// const map<string, string> FOOD_TYPE_MAP = {
// 	'1': 'chuangcai',
// 	'2': 'lucai'
// }
// const list<string> Year = ['2012', '2013', '2014']
// const set<i32> Month = ['1', '2', '3']

// exception IException {
//   1: i32 errno = 500,
//   2: string errmsg = "Server Error..."
// }

// typedef i32 MyInteger
// typedef Address myAddress
// typedef list<Address> myAddressList
// typedef set<Address> myAddressList2
// typedef map<i32, Address> myAddressList3

// enum Sex {
// 	FEMALE = 1,
// 	MALE
// }

// struct User {
// 	1: required i32 id = 1;
// 	2: required string name;
// 	// 3: optional Sex sex;
// 	4: double height;
// 	5: Address address;
// 	// 6: list<Honor> honor;
// 	// 7: set<Teacher> allTeacher;
// 	// 8: map<Address, i32> gradeTeacher;
// }

// struct Address {
// 	1: string city = 'beijing', # city comment
// 	2: optional string code, // comment2
// 	3: bool bigCity = 1,
// 	4: i32 test = Sex.MALE
// }

// struct Honor {
// 	1: string date;
// 	2: string content;
// }

// struct Teacher {
// 	1: i32 id;
// 	2: string name;
// }

// union JavaObjectArg {
//   1: i32 int_arg;
//   2: i64 long_arg;
//   3: string string_arg;
//   4: bool bool_arg;
//   5: binary binary_arg;
//   6: double double_arg;
// }

// exception InvalidOperation {
//   1: i32 errno = 500,
//   2: string errmsg = "Server Error..."
// }

// struct Work {
// 	1: required string bizCode;
//   2: optional i32    poiId;
// }

struct User {
  1: i32 id,
  2: string name,
}


// service MyService {
//   void ping(),
//   list<i32> ping2(),
//   // i32 add(1:i32 num1, 2:string num2),
//   // i32 calculate(1:i32 logid, 2:Work w) throws (1:InvalidOperation ouch),
//   // User getUser(1:i32 id),
// }